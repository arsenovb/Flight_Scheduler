// <auto-generated />
using System;
using Flight_Scheduler.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flight_Scheduler.Migrations
{
    [DbContext(typeof(Flight_SchedulerContext))]
    partial class Flight_SchedulerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightFlightCrew", b =>
                {
                    b.Property<int>("FlightCrewsId")
                        .HasColumnType("int");

                    b.Property<int>("FlightsId")
                        .HasColumnType("int");

                    b.HasKey("FlightCrewsId", "FlightsId");

                    b.HasIndex("FlightsId");

                    b.ToTable("FlightFlightCrew");
                });

            modelBuilder.Entity("Flight_Scheduler.Models.Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CrewCapacity")
                        .HasColumnType("int");

                    b.Property<int>("FuelTankCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassengerCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("Flight_Scheduler.Models.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("Flight_Scheduler.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John F. Kennedy (JFK), New York"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Los Angeles International (LAX), Los Angeles"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hartsfield-Jackson Atlanta (ATL), Atlanta"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Heathrow Airport (LHR), London"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Charles de Gaulle (CDG), Paris"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Tokyo Haneda (HND), Tokyo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Dubai International (DXB), Dubai"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sydney Airport (SYD), Sydney"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Changi Airport (SIN), Singapore"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Hong Kong International (HKG), Hong Kong"
                        });
                });

            modelBuilder.Entity("Flight_Scheduler.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AircraftId")
                        .HasColumnType("int");

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("AirlineId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("OriginId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("Flight_Scheduler.Models.FlightCrew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FlightCrews");
                });

            modelBuilder.Entity("FlightFlightCrew", b =>
                {
                    b.HasOne("Flight_Scheduler.Models.FlightCrew", null)
                        .WithMany()
                        .HasForeignKey("FlightCrewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flight_Scheduler.Models.Flight", null)
                        .WithMany()
                        .HasForeignKey("FlightsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Flight_Scheduler.Models.Flight", b =>
                {
                    b.HasOne("Flight_Scheduler.Models.Aircraft", "Aircraft")
                        .WithMany("Flights")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flight_Scheduler.Models.Airline", "Airlines")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flight_Scheduler.Models.Airport", "Destination")
                        .WithMany("DestinationFlights")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Flight_Scheduler.Models.Airport", "Origin")
                        .WithMany("OriginatingFlights")
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Airlines");

                    b.Navigation("Destination");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("Flight_Scheduler.Models.Aircraft", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Flight_Scheduler.Models.Airline", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Flight_Scheduler.Models.Airport", b =>
                {
                    b.Navigation("DestinationFlights");

                    b.Navigation("OriginatingFlights");
                });
#pragma warning restore 612, 618
        }
    }
}
